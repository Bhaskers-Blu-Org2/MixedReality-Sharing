# [Template] Build packages and publish artifacts

steps:
  - task: DotNetCoreCLI@2 # netcore or netstandard project use this instead of nuget task
    inputs:
      # We would like to use 'pack', not 'custom' but the former doesn't pass the
      # "arguments: '/p:platform=AnyCPU'" through. This means this task looks for
      # build/bin/Release/Foo.dll instead of
      # build/bin/Release/AnyCPU/Foo.dll
      #command: 'pack'
      command: 'custom'
      custom: 'pack'
      nobuild: 'true'
      verbosityPack: 'normal'
      configuration: 'Release'
      arguments: '/p:platform=AnyCPU'
      packagesToPack: 'libs/Matchmaking/src/*.csproj'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '0'
      minorVersion: '0'
      patchVersion: '0'

# - task: NuGetCommand@2 # c++ needs an explicit nuspec
#   inputs:
#     command: 'pack'
#     configuration: 'Release'
#     packagesToPack: 'libs/**/*.nuspec'
#     buildProperties: OutputPath=..\..\..\build\bin\Release # TODO not hardcoded
#     versioningScheme: 'byPrereleaseNumber'
#     majorVersion: '0'
#     minorVersion: '0'
#     patchVersion: '0'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'

  # releasing packages is done from 'release' in ADO